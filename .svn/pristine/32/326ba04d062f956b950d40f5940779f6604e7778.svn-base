<?php

namespace App\Http\Controllers\hr;

use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Database\Eloquent\Relations\Relation;
use App\hr_salary_allowance as allowance;
use App\hr_emp_personal_details as employee;

use App\User;
use App\hr_company;
use App\hr_branch;
use Auth;
use DB;
use Alert;
use Mail;

class salaryMasterController extends Controller
{










    public function index()
    {
        if(Controller::userAccessRights('Salary&Payroll')!=1) return redirect()->back();
           
        $company=hr_company::where('status','1')->get();

        return View('hr.salary.salaryMaster',compact('company'));
    }









    public function create(Request $request)
    {
        
        $logins=Auth::guard('admin')->user();

        if(Controller::userAccessRights('Generate Salary')!=1) return redirect()->back();

            
        //**************************Get Branch Names Based On Company Names***********************//

        //**************************_______________________________***********************//

        if($request->process=='getBranches')
        {
            $branch=hr_branch::where('company_id',$request->company)->where('status','1')->get();

            return $branch;
        }


            
        //**************************get Salary Details Based On Filters***********************//

        //**************************_______________________________***********************//

        if($request->process=='getSalaryDetails')
        {
            $employee=DB::table('hr_emp_personal_details as employee')->join('logins','logins.id','=','employee.user_id')->where('logins.status','Active')->orderBy('company_id','asc')->orderBy('branch_id','asc')->orderBy('department_id','asc')->orderBy('designation_id','asc')->get();

            //$branch=hr_branch::where('company_id',$request->company)->where('status','1')->get();

        return View('hr.salary.salaryMasterAjax',compact('employee'));
        }


    }













    public function store(Request $request)
    {
        //
    }









    public function show($id)
    {
        //
    }











    public function edit($id)
    {
        //
    }












    public function update(Request $request, $id)
    {
        //
    }









    public function destroy($id)
    {
        //
    }
}
